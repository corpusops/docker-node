env:
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"
  BUILDKIT_PROGRESS: "plain"
  NO_SQUASH: ""
  NO_SILENT: "1"
  NONINTERACTIVE: "1"
  FORCE_ONLINE: "1"
  NBPARALLEL: "2"
  RELEASABLE_REPOS: "^corpusops/"
  RELEASABLE_BRANCHES: "^(refs/heads/)?(master|main|2.0|workflows)$"
  COPS_URL: "https://github.com/corpusops/corpusops.bootstrap"
  COPS_ROOT: "${{github.workspace}}/local/corpusops.bootstrap"
  silent: "$COPS_ROOT/bin/cops_shell_common output_in_error silent_vv"
  DOCKER_RELEASER: "${{ secrets.DOCKER_HUB_USERNAME }}"
  DOCKER_PASSWORD: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
jobs:
  r:
    runs-on: ubuntu-24.04
    env: {IMAGES: "${{matrix.IMAGES}}"}
    steps:
      - name: Set vars
        run: |-
            if ( echo "$GITHUB_REF" | egrep -q "${RELEASABLE_BRANCHES}" ) \
            && ( echo "$GITHUB_REPOSITORY" | egrep -q "${RELEASABLE_REPOS}" )
            then releasable=true;else releasable=false;fi
            echo "releasable=$releasable" >> $GITHUB_OUTPUT
            echo "silent=$(echo $silent)" >> $GITHUB_OUTPUT
        id: v
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Activate docker experimental
        run: |-
          sudo bash -exc "if [ ! -e /etc/docker/daemon.json ];then mkdir /etc/docker||true;echo '{}' > /etc/docker/daemon.json;fi;service docker stop;python -c \
          \"d='/etc/docker/daemon.json';\
          import json;c=json.load(open(d));c['experimental']=True;\
          open(d, 'w').write(json.dumps(c))\"
          systemctl restart docker"
      - uses: actions/checkout@v3
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache
            local
          key: 6-${{ runner.os }}-${{ github.ref }}-${{ github.repository }}-venvstatics
      - name: setup
        run: set -e;i=$(whoami);sudo sh -c "chown -Rf $i .";
             sudo sh -c 'sed -i -re 's/azure.//' /etc/apt/sources.list && apt-get update -qq' && ./main.sh refresh_corpusops;
             sudo sh -c 'sed -i -re 's/azure.//' /etc/apt/sources.list && apt-get update -qq && apt-get install -qqy --force-yes parallel'
      - name: refresh images
        run: set -e;if (echo $IMAGES|grep -q zleftover);then
             rm -f */*/*/Dockerfile&&${{steps.v.outputs.silent}} ./refresh_images.sh;
             fi
      - name: build & release
        run: set -e;
             if [ "x${{steps.v.outputs.releasable}}" = "xtrue" ];then export DO_RELEASE=1;fi;
             ./build.sh $IMAGES
# ${{steps.v.outputs.silent}} ./build.sh $IMAGES
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        IMAGES:
        - "library/node/22 library/node/22-alpine library/node/22-slim"
        - "library/node/current library/node/current-alpine library/node/current-slim library/node/latest library/node/alpine library/node/slim"
        - "library/node/lts library/node/lts-alpine library/node/lts-fermium library/node/lts-gallium library/node/lts-hydrogen library/node/lts-iron library/node/lts-slim"
        - "library/node/10 library/node/10-alpine library/node/10-slim library/node/dubnium library/node/dubnium-alpine library/node/dubnium-slim"
        - "library/node/12 library/node/12-alpine library/node/12-slim library/node/erbium library/node/erbium-alpine library/node/erbium-slim"
        - "library/node/14 library/node/14-alpine library/node/14-slim library/node/fermium library/node/fermium-alpine library/node/fermium-slim"
        - "library/node/16 library/node/16-alpine library/node/16-slim library/node/gallium library/node/gallium-alpine library/node/gallium-slim"
        - "library/node/18 library/node/18-alpine library/node/18-slim library/node/hydrogen library/node/hydrogen-alpine library/node/hydrogen-slim"
        - "library/node/20 library/node/20-alpine library/node/20-slim library/node/iron library/node/iron-alpine library/node/iron-slim"
        #- "corpusops/test/a corpusops/test/b corpusops/test/c"
        # all images that werent explicitly told to be built would be built in the next batches
        # we span them onto N jobs
        - "zleftover:1/2"
        - "zleftover:2/2"
on:
  # push:
  # workflow_dispatch:
  # schedule: [{cron: '1 0 4,6,8,18,20,22 * *'}]
